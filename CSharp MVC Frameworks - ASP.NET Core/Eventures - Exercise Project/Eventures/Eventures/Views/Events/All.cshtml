@model Eventures.ViewModels.Events.AllEventsViewModel;

<h1 class="text-center">All Events</h1>

<div class="row justify-content-around">
    <div class="col-md-10">
        <hr class="hr-blue hr-2" />
        <table class="table">
            <thead>
                <tr>
                    <th scope="col" class="names">#</th>
                    <th scope="col" class="names">Name</th>
                    <th scope="col" class="names">Start</th>
                    <th scope="col" class="names">End</th>
                    <th scope="col" class="names">Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Events.Count(); i++)
                {
                    var currentEvent = Model.Events.ToList()[i];
                    <tr>
                        <td>@(i + 1 + (Model.CurrentPage - 1) * 3) </td>
                        <td>@currentEvent.Name</td>
                        <td>@currentEvent.GetStartDate</td>
                        <td>@currentEvent.GetEndDate</td>
                        <td class="create-order">
                            <form asp-controller="Orders" asp-action="Create" method="post">
                                <label for="tickets">Tickets</label>
                                <input type="number" id="tickets" name="ticketsCount">
                                <input type="text" name="eventId" hidden value="@currentEvent.Id">
                                <button type="submit" class="btn eventures-bg-color">Order</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <hr class="hr-blue hr-2" />

        <div class="row justify-content-around">
            @Html.PagedListPager(Model.Events, page => Url.Action("All", new { page }), new PagedListRenderOptionsBase()
       {
           LiElementClasses = new string[] { "page-item" },
           PageClasses = new string[] { "page-link" },
           DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
           DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
           Display = PagedListDisplayMode.IfNeeded
       })
        </div>      
    </div>
</div>
